import UIKit

protocol {{ module_info.name }}ViewControllerProtocol: class {
    func displaySomeActionResult(viewModel: {{ module_info.name }}.SomeAction.ViewModel)
}

final class {{ module_info.name }}ViewController: UIViewController {
    private let interactor: {{ module_info.name }}InteractorProtocol

    init(interactor: {{ module_info.name }}InteractorProtocol) {
        self.interactor = interactor
        super.init(nibName: nil, bundle: nil)
    }

    @available(*, unavailable)
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func loadView() {
        let view = {{ module_info.name }}View(frame: UIScreen.main.bounds)
        self.view = view
    }
}

extension {{ module_info.name }}ViewController: {{ module_info.name }}ViewControllerProtocol {
    func displaySomeActionResult(viewModel: {{ module_info.name }}.SomeAction.ViewModel) { }
}