//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

protocol {{ module_info.name }}ViewControllerProtocol: class {
    func displaySomething(viewModel: {{ module_info.name }}.Something.ViewModel)
}

final class {{ module_info.name }}ViewController: UIViewController {
    let interactor: {{ module_info.name }}InteractorProtocol
    private var state: {{ module_info.name }}.ViewControllerState

    init(
        interactor: {{ module_info.name }}InteractorProtocol, 
        initialState: {{ module_info.name }}.ViewControllerState = .loading
    ) {
        self.interactor = interactor
        self.state = initialState

        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: ViewController lifecycle

    override func loadView() {
        let view = {{ module_info.name }}View(
            frame: UIScreen.main.bounds
        )
        self.view = view
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.someAction()
    }

    // MARK: Requests logic

    private func someAction() {
        self.interactor.doSomeAction(
            request: {{ module_info.name }}.Something.Request()
        )
    }
}

extension {{ module_info.name }}ViewController: {{ module_info.name }}ViewControllerProtocol {
    func displaySomething(viewModel: {{ module_info.name }}.Something.ViewModel) {
        display(newState: viewModel.state)
    }

    func display(newState: {{ module_info.name }}.ViewControllerState) {
        self.state = newState
    }
}