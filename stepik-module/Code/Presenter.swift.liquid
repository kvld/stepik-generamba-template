//
//  {{ module_info.description }}
//  Created by {{ developer.name }} on {{ date }}.
//

import UIKit

protocol {{ module_info.name }}PresenterProtocol {
    func presentSomething(response: {{ module_info.name }}.Something.Response)
}

final class {{ module_info.name }}Presenter: {{ module_info.name }}PresenterProtocol {
    weak var viewController: {{ module_info.name }}ViewControllerProtocol?

    func presentSomething(response: {{ module_info.name }}.Something.Response) {
        var viewModel: {{ module_info.name }}.Something.ViewModel
        
        switch response.result {
        case let .failure(error):
            viewModel = {{ module_info.name }}.Something.ViewModel(state: .error(message: error.localizedDescription))
        case let .success(result):
            if result.isEmpty {
                viewModel = {{ module_info.name }}.Something.ViewModel(state: .emptyResult)
            } else {
                viewModel = {{ module_info.name }}.Something.ViewModel(state: .result(data: result))
            }
        }
        
        viewController?.displaySomething(viewModel: viewModel)
    }
}