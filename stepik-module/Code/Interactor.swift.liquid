//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import Foundation
import PromiseKit

protocol {{ module_info.name }}InteractorProtocol {
    func doSomeAction(request: {{ module_info.name }}.Something.Request)
}

final class {{ module_info.name }}Interactor: {{ module_info.name }}InteractorProtocol {
    let presenter: {{ module_info.name }}PresenterProtocol
    let provider: {{ module_info.name }}ProviderProtocol

    init(
        presenter: {{ module_info.name }}PresenterProtocol, 
        provider: {{ module_info.name }}ProviderProtocol
    ) {
        self.presenter = presenter
        self.provider = provider
    }
    
    // MARK: Do some action

    func doSomeAction(request: {{ module_info.name }}.Something.Request) {
        self.provider.fetchSomeItems().done { items in
            self.presenter.presentSomething(
                response: {{ module_info.name }}.Something.Response(result: .success(items))
            )
        }.catch { error in
            self.presenter.presentSomething(
                response: {{ module_info.name }}.Something.Response(result: .failure(Error.fetchFailed))
            )
        }
    }

    enum Error: Swift.Error {
        case fetchFailed
    }
}